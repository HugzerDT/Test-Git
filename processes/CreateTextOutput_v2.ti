#region Prolog

## Déclaration des noms des objets qui nous intéressent et du paramètre temporaire
vsCube = 'Sales_Plan';
vsView = GetProcessName() | '_Source';
vsSubset = GetProcessName() | '_Source';
vTemp = 1;

## Création de la vue source (destruction préalable si nécessaire)
if( ViewExists( vsCube, vsView ) = 1);
  ViewDestroy( vsCube, vsView ); 
endif;
ViewCreate( vsCube, vsView, vTemp);

## On créé un subset spécifique pour la dimension 'Versions'
vDim = 'Versions';
if( SubsetExists( vDim, vsSubset ) = 1);
  SubsetDeleteAllElements( vDim, vsSubset );
else;
  SubsetCreate( vDim, vsSubset, vTemp );
endif;
SubsetElementInsert( vDim, vsSubset, 'Budget Version 1', 1);
ViewSubsetAssign(vsCube, vsView, vDim, vsSubset);

## Conditions à respecter pour la source
ViewExtractSkipZeroesSet( vsCube, vsView, 1);
ViewExtractSkipRuleValuesSet( vsCube, vsView, 0);
ViewExtractSkipCalcsSet( vsCube, vsView, 1);

## Déclaration de la vue source pour ce processus
DataSourceType = 'View';
DatasourceNameForClient = vsCube;
DatasourceNameForServer = vsCube;
DatasourceCubeview = vsView;
#endregion
#region Metadata
TextOutput('TextOutput.csv', vSubsidiaries, vChannels, vProducts, vMonths,vVersions, vSales_Plan_Measures, vValue);
#endregion